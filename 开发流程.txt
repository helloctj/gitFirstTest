1. node server要做三件事：
	a. 前台展示：给用户看的和用户操作的
	b. 数据库操作：对数据库进行增删改查
	c. 后台展示：给网站管理员看的
**************************************************************************************
2. 划分项目目录：
	app.js
	package.json
	[src]：具体后台功能
	[models]：mongoose对应的数据模型，操作数据库中增删改查的对象
	[schemas]：对数据库进行规范
	[public]：静态资源(css/js/images/...)
	[routers]：所有路由(前台、后台、数据 走url的)
	[views]：ejs模板
	[db]；数据库
**************************************************************************************
3. cnpm init (创建package.json文件)
4. 连接数据库mongod --dbpath=... --port=27017
5. 创建数据库 打开可视化操作界面
6. 新建app.js文件
	下载第三方模块：cnpm i -S express mongoose ejs ...
	var app = express();
	内置模块和第三方模块写在上面，自定义模块写在下面
7. 测试数据库和服务环境mongoose.connect app.listen
**************************************************************************************
8. 创建路由routers文件(pageRouter.js apiRouter.js adminRouter.js)
9. var router = express.Router();
	module.exports = router;
	router.get测试是否成功
10. 在app.js中引用自定义路由文件模块
	app.use('/', pageRouter);
	app.use((req, res)=>{
		res.redirect('/index');
	})重定向到首页
	app.set('views','./views');第二个参数为路径
	app.set('view engine', 'ejs');一定要执行的写在上面 
	路由中可以渲染res.render(template,data,[options]);
11. views .ejs测试渲染成功与否
**************************************************************************************
12. 布局+css  
	设置静态资源访问app.use(express.static('public'));写在路由前面
13. 登录、注册点击跳转页面 写路由文件 测试成功与否 写跳转后的页面的模板、布局、样式
14. 登录注册属于功能 写apiRouter文件 post请求 获取post发送请求的数据 body-parser
	cnpm i -S body-parser cookie-parser
	body-parser:	app.use(bodyParser.json());	获取post请求的json格式的数据
					app.use(bodyParser.urlencoded({extended: false}));	
					传输类型：	false表示只能接收字符串或数组类型的数据，
								true表示能接收任意类型的数据
					要放在引用路由文件和重定向的上面，否则执行到路由将不再继续向下执行
					静态文件-->……(内置模块引用)-->路由文件引用-->重定向到首页
	cookie-parser:	app.use(cookieParser());
15. req.body post请求的数据
	req.query get请求 解析请求里的参数
	前端后端都要做验证
**************************************************************************************
16. 操作数据库 在schemas和models文件夹下创建数据库表的.js文件 名字最好对应上
	引用mongoose模块
	创建Schema对象模型 提供对外接口module.exports = xxxSchema; models中要用到
	module.exports = mongoose.model('表名', xxxSchema); 其他文件中要用到
	然后可以进行相应数据库操作 在api功能路由文件中引用这个自定义模块
17. 数据库表操作 
	注册：查找findOne找不到返回info-->null; find找不到返回info-->[]
		  查找不到用户名可以注册，并添加到数据库表中；
		  查找到用户名已被注册，后退到注册页
	登录：查找到用户名密码匹配，登录成功跳转首页，首页布局通过保存cookie记录登录状态和ejs模板改变；
		  查找不到匹配的用户名密码(用户名错误或密码错误)，登陆失败，后退到登录页
18. api记录cookie值 res.cookie('', {}, [options]);设置expires并JSON.stringify()转成字符串格式
	page拿到cookie值 req.cookies();	JSON.parse()解析成对象
	写一个函数：检测是否登录 没有登录cookie就自动跳转登录页 重定向
**************************************************************************************














